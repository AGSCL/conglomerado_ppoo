---
title: "Paso 6 (2)- Trayectorias de hospitalización y mortalidad con foco en condiciones vinculadas a trastornos de salud mental y consumo de sustancias posterior a un primer ingreso por alguno de estos trastornos, en usuarios/as jóvenes y adultos emergentes de población general y pertenecientes a pueblos originarios, 2018-2021, Chile"
description: |
  Análisis de sensibilidad para resolución trimestral, utilizando una solución con una mayor cantidad de conglomerados.
date-format: "D [d]e MMM, YYYY"
lang: es
date: last-modified
bibliography: [_lit/referencias.bib]
csl: "_lit/american-medical-association.csl" # (Opcional: estilo de citas, p.ej., APA)
author: "Andrés González Santa Cruz"
format: 
  html:
    css: [_lib/styles.scss]
    code-fold: true
    embed-resources: true
    fig-cap-location: top
lightbox: auto
toc: true
toc-depth: 5
toc-location: left
toc-float: true
---

<style>
.scrollable-content {
  max-height: 350px;
  overflow-y: auto;
}
</style>
<style>
pre.scrollable-code {
  max-height: 350px;
  overflow-y: auto;
}
</style>


# Configurar

```{r}
#| message: true
#| include: true
#| warning: false

# remover objetos y memoria utilizada
rm(list=ls());gc()

#remover imágenes
while(!dev.cur())dev.off()
cat("\014")

if(Sys.info()["sysname"]=="Windows"){
 folder_path <- ifelse(dir.exists("H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/un_inv_II/"),
                       "H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/un_inv_II/",
                       "C:/Users/CISS Fondecyt/Mi unidad/Alvacast/SISTRAT 2022 (github)/_proposal_grant/2023/")
} else {folder_path <- ""}
load(paste0(folder_path,"avance250117_25.RData"))
```



# Paquetes estadísticos

```{r setup}
#| class-output: center-table
#| message: true
#| include: true
#| warning: false

#elegir repositorio
if(Sys.info()["sysname"]=="Windows"){
  options(repos = c(CRAN = "https://cran.dcc.uchile.cl/"))
}
options(install.packages.check.source = "yes") # Chequea la fuente de los paquetes

#borrar caché
#system("fc-cache -f -v")

#elegir repositorio
if(Sys.info()["sysname"]=="Windows"){
  options(repos = c(CRAN = "https://cran.dcc.uchile.cl/"))
}
options(install.packages.check.source = "yes") # Chequea la fuente de los paquetes

#borrar caché
#system("fc-cache -f -v")

if(!require(pacman)){install.packages("pacman");require(pacman)}

pacman::p_unlock(lib.loc = .libPaths()) #para no tener problemas reinstalando paquetes

if(Sys.info()["sysname"]=="Windows"){
if (getRversion() != "4.4.1") { stop("Requiere versión de R 4.4.1. Actual: ", getRversion()) }
}

cat("quarto version: "); system("quarto --version") 

if(!require(job)){install.packages("job");require(job)}
if(!require(kableExtra)){install.packages("kableExtra");require(kableExtra)}
if(!require(tidyverse)){install.packages("tidyverse");require(tidyverse)}
if(!require(cluster)){install.packages("cluster"); require(cluster)}
if(!require(WeightedCluster)){install.packages("WeightedCluster"); require(WeightedCluster)}
if(!require(devtools)){install.packages("devtools"); require(devtools)}
if(!require(TraMineR)){install.packages("TraMineR"); require(TraMineR)}
if(!require(TraMineRextras)){install.packages("TraMineRextras"); require(TraMineRextras)}
if(!require(NbClust)){install.packages("NbClust"); require(NbClust)}
if(!require(haven)){install.packages("haven"); require(haven)}
if(!require(ggseqplot)){install.packages("ggseqplot"); require(ggseqplot)}
if(!require(grid)){install.packages("grid"); require(grid)}
if(!require(gridExtra)){install.packages("gridExtra"); require(gridExtra)}
if(!require(Tmisc)){install.packages("Tmisc"); require(Tmisc)}
if(!require(factoextra)){install.packages("factoextra"); require(factoextra)}
if(!require(stargazer)){install.packages("stargazer"); require(stargazer)}
if(!require(gtsummary)){install.packages("gtsummary"); require(gtsummary)}
if(!require(lmtest)){install.packages("lmtest"); require(lmtest)}
if(!require(emmeans)){install.packages("emmeans"); require(emmeans)}
if(!require(fpp2)){install.packages("fpp2"); require(fpp2)}
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(forecast)){install.packages("forecast"); require(forecast)}
if(!require(magrittr)){install.packages("magrittr"); require(magrittr)}
if(!require(foreach)){install.packages("foreach"); require(foreach)}
if(!require(doParallel)){install.packages("doParallel"); require(doParallel)}
if(!require(progressr)){install.packages("progressr"); require(progressr)}
if(!require(chisq.posthoc.test)){devtools::install_github("ebbertd/chisq.posthoc.test")}
if(!require(rstatix)){install.packages("rstatix"); require(rstatix)}
if(!require(rio)){install.packages("rio"); require(rio)}
if(!require(cowplot)){install.packages("cowplot"); require(cowplot)}
if(!require(DiagrammeR)){install.packages("DiagrammeR"); require(DiagrammeR)}
if(!require(DiagrammeRsvg)){install.packages("DiagrammeRsvg"); require(DiagrammeRsvg)}
if(!require(rsvg)){install.packages("rsvg"); require(rsvg)}
if(!require(survminer)){install.packages("survminer"); require(survminer)}
if(!require(epitools)){install.packages("epitools"); require(epitools)}

```


# Resultados

## 1. Trimestral

### 1.2. Sensibilidad= PAM (OM), sol 6 cluster- diagnósticos

```{r 12a}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| label: silueta-pamom6


invisible("Me da buena: 0,61 en promedio. Se mantiene. El problema está con 5710 es negativo")
sil_pam_om_clus6_q_nostd<-
  silhouette(as.integer(pamRange_quarter_om$clustering$cluster6), as.dist(dist_quarter_om))

# Crear etiquetas personalizadas
cluster_labels6 <- paste0("Cluster ", 
          seq_along(attr(summary(sil_pam_om_clus6_q_nostd)$clus.avg.widths, "dimnames")[[1]]), 
          ":\nAWS ", sprintf("%1.2f",summary(sil_pam_om_clus6_q_nostd)$clus.avg.widths))

# Graficar con etiquetas personalizadas
fviz_silhouette(
  sil_pam_om_clus6_q_nostd, 
  lab.clusters = cluster_labels6, # Etiquetas personalizadas para los clústeres
  print.summary=F) +
  scale_fill_grey(start = 0.2, end = 0.8, labels = cluster_labels6) +  # Escala de grises
  scale_color_grey(start = 0.2, end = 0.8, labels = cluster_labels6)+   # Escala de grises para los bordea
  ggtitle(NULL)+
  labs(y="Ancho medio de la silueta", x="Conglomerados")# Elimina el título

ggsave("_figs/sil_plot_pam_om6_q_25.png", width = 8, height = 5, dpi = 500)
```

```{r 12a2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| label: pamom6vspamom4

tabla_conteo <- table(pamRange_quarter_om$clustering$cluster6, 
                      pamRange_quarter_om$clustering$cluster4)

# Proporción por fila
tabla_prop_fila <- prop.table(tabla_conteo, 1)

# Proporción por columna
tabla_prop_col <- prop.table(tabla_conteo, 2)

# Redondear ambas
tabla_prop_fila <- sprintf("%1.2f", tabla_prop_fila)
tabla_prop_col <- sprintf("%1.2f", tabla_prop_col)

# Combinar ambas proporciones en el formato "fila / col"
tabla_combinada <- matrix(
  paste0(tabla_prop_fila, " / ", tabla_prop_col),
  nrow = nrow(tabla_conteo),
  ncol = ncol(tabla_conteo),
  dimnames = dimnames(tabla_conteo)
)


# Convertir la tabla a un formato limpio con kable
tabla_combinada |> 
  kable(
    caption = "Proporciones de Clusters (por fila / por columna), Solución de 6 vs. 4 conglomerados", 
    col.names = c("6522, Un semestre TSM(2)", 
                  "6574, Comorbilidad un trimestre(3)", 
                  "6612, Un trimestre, TUS(4)", 
                  "6623, Un trimestre, TSM(4)"), 
    align = "c"
  ) |> 
  kable_classic() |> 
  footnote(
    general = "6268= TSM, 1 año después, TSM; 6522= Un semestre TSM; 6574= Comorbilidad un trimestre; 6612= Un trimestre, TUS; 6623= Un trimestre, TSM; 6624= TSM, 1 año después, otras causas",
    general_title = "Nota:",
    footnote_as_chunk = TRUE,
    escape = FALSE
  )
```

Vemos los diagnósticos que vienen después de aquellos cluster con más de un ingreso.

```{r 12b-6036}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true

diag_pam_om6_q_6624<-
df_filled2|> 
  dplyr::filter(run %in% subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, grepl("6624", clus_pam_om6))$run)|> 
  dplyr::select(run, diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11, fecha_egreso_rec_fmt, estab_homo)|> 
  dplyr::group_by(run)|> 
  dplyr::filter(row_number() != 1)|> # Elimina la primera observación de cada run
  dplyr::mutate(
    all_diags = paste(na.omit(c(diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11)), collapse = ", ")
  )|> 
  dplyr::summarise(
    all_diags = first(all_diags),
    fecha_egreso_rec_fmt = first(fecha_egreso_rec_fmt),
    estab_homo = first(estab_homo)
  )|> 
  dplyr::ungroup()|>  
  dplyr::pull(all_diags)|># Extraer la columna all_diags como vector
  strsplit(split = ", ")|> # Separar cada diagnóstico por comas
  unlist()  # Convertir la lista en un vector
invisible("head(arrange(data.frame(table(diag_pam_om6_q_6624)) |> mutate(across(1, as.character)), -Freq),10) |> dput()")
invisible("Para chatgpt= estos son códigos de CIE-10, descríbeme brevemente cada uno en markdown en formato 'Cód. CIE-10 (n=Freq) - [descripción] '")

```

Entre quienes se encontraron ingresados en el sistemas por TSM, y luego de un año son ingresados por otras causas, esas causas posteriores abarcan principalmente:

- **F19.2 (n=26)** - Trastornos mentales y del comportamiento debido al uso de múltiples drogas y al uso de otras sustancias psicoactivas: síndrome de dependencia.
- **E10.1 (n=25)** - Diabetes mellitus tipo 1 con cetoacidosis.
- **O00.8 (n=19)** - Otros embarazos ectópicos.
- **F60.9 (n=18)** - Trastorno de la personalidad, no especificado.
- **Z51.8 (n=18)** - Encuentro para otro tipo de atención posterior especificada.
- **N39.0 (n=17)** - Infección del tracto urinario, sitio no especificado.
- **Z37.0 (n=17)** - Nacimiento único vivo.
- **F60.3 (n=16)** - Trastorno de la personalidad borderline.
- **G40.9 (n=15)** - Epilepsia, no especificada.
- **F32.2 (n=13)** - Trastorno depresivo mayor, episodio único, grave, sin características psicóticas.


```{r 12b-5710}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true

diag_pam_om7_q_6268<-
df_filled2|>
  dplyr::filter(run %in% subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, grepl("6268", clus_pam_om6))$run)|>
  dplyr::select(run, diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11, fecha_egreso_rec_fmt, estab_homo)|> 
  dplyr::group_by(run)|> 
  dplyr::filter(row_number() != 1)|> # Elimina la primera observación de cada run
  dplyr::mutate(
    all_diags = paste(na.omit(c(diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11)), collapse = ", ")
  )|> 
  dplyr::summarise(
    all_diags = first(all_diags),
    fecha_egreso_rec_fmt = first(fecha_egreso_rec_fmt),
    estab_homo = first(estab_homo)
  )|> 
  dplyr::ungroup()|>  
  dplyr::pull(all_diags)|># Extraer la columna all_diags como vector
  strsplit(split = ", ")|> # Separar cada diagnóstico por comas
  unlist()  # Convertir la lista en un vector
invisible("head(arrange(data.frame(table(diag_pam_om7_q_6268)) |> mutate(across(1, as.character)), -Freq),10) |> dput()")
invisible("Para chatgpt= estos son códigos de CIE-10, descríbeme brevemente cada uno en markdown en formato 'Cód. CIE-10 (n=Freq) - [descripción] '")

```

Entre las trayectorias que ingresaron por trastornos de salud mental, y posteriormente reingreesaron por las mismas causas un año después (5710), estas son las principales causas por las que reingresan posteriormente:

- **F60.3 (n=77)** - Trastorno de la personalidad emocionalmente inestable (trastorno límite de la personalidad).
- **F60.9 (n=59)** - Trastorno de la personalidad, no especificado.
- **F32.9 (n=55)** - Trastorno depresivo mayor, episodio único, no especificado.
- **F32.2 (n=54)** - Trastorno depresivo mayor, episodio único, grave, sin características psicóticas.
- **F20.9 (n=44)** - Esquizofrenia, no especificada.
- **F20.0 (n=43)** - Esquizofrenia paranoide.
- **F31.9 (n=43)** - Trastorno bipolar, no especificado.
- **F19.2 (n=36)** - Trastornos mentales y del comportamiento debido al uso de múltiples drogas y al uso de otras sustancias psicoactivas: síndrome de dependencia.
- **C49.9 (n=29)** - Neoplasia maligna del tejido conectivo y de tejidos blandos, no especificado.
- **G90.9 (n=21)** - Trastorno del sistema nervioso autónomo, no especificado.


```{r 12b-5935}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true

diag_pam_om7_q_6522<-
df_filled2|>
  dplyr::filter(run %in% subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, grepl("6522", clus_pam_om6))$run)|>
  dplyr::select(run, diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11, fecha_egreso_rec_fmt, estab_homo)|> 
  dplyr::group_by(run)|> 
  dplyr::filter(row_number() != 1)|> # Elimina la primera observación de cada run
  dplyr::mutate(
    all_diags = paste(na.omit(c(diag1, diag2, diag3, diag4, diag5, diag6, diag7, diag8, diag9, diag10, diag11)), collapse = ", ")
  )|> 
  dplyr::summarise(
    all_diags = first(all_diags),
    fecha_egreso_rec_fmt = first(fecha_egreso_rec_fmt),
    estab_homo = first(estab_homo)
  )|> 
  dplyr::ungroup()|>  
  dplyr::pull(all_diags)|># Extraer la columna all_diags como vector
  strsplit(split = ", ")|> # Separar cada diagnóstico por comas
  unlist()  # Convertir la lista en un vector
invisible("head(arrange(data.frame(table(diag_pam_om7_q_6522)) |> mutate(across(1, as.character)), -Freq),10) |> dput()")
invisible("Para chatgpt= estos son códigos de CIE-10, descríbeme brevemente cada uno en markdown en formato 'Cód. CIE-10 (n=Freq) - [descripción] '")
```

Entre quienes experimentaron una trayectoria conssitente en ingresar por trastornos de salud mental, y luego de 6 meses reingresar por las mismas causas, (5935), se encuentran los siguientes diagnósticos al reingreso:

- **F32.9 (n=102)** - Trastorno depresivo mayor, episodio único, no especificado.
- **F32.2 (n=98)** - Trastorno depresivo mayor, episodio único, grave, sin características psicóticas.
- **F60.9 (n=71)** - Trastorno de la personalidad, no especificado.
- **F20.9 (n=59)** - Esquizofrenia, no especificada.
- **F60.3 (n=58)** - Trastorno de la personalidad emocionalmente inestable (trastorno límite de la personalidad).
- **F31.9 (n=42)** - Trastorno bipolar, no especificado.
- **F19.2 (n=39)** - Trastornos mentales y del comportamiento debido al uso de múltiples drogas y al uso de otras sustancias psicoactivas: síndrome de dependencia.
- **F32.3 (n=35)** - Trastorno depresivo mayor, episodio único, grave, con características psicóticas.
- **F20.0 (n=34)** - Esquizofrenia paranoide.
- **F43.2 (n=27)** - Trastorno por estrés postraumático (TEPT).


Luego vemos la clasificación de PPOO por cluster

```{r 12c}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true

janitor::chisq.test(df_filled2[,c("run","glosa_pueblo_originario")]|>
        dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run", "clus_pam_om6")], by="run", multiple="first")|>
        janitor::tabyl(glosa_pueblo_originario, clus_pam_om6))
# X-squared = 175.35, df = 40, p-value < 2.2e-16
```

Generamos un gráfico de PPOO por cada conglomerado.

```{r 12ppoo-plot-cluster}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Eventos hospitalarios y reportes de pertenencia a PPOO MINSAL, por conglomerados"
#| results: "hold"
#| fig-width: 10
#| fig-height: 5

janitor::chisq.test(df_filled2[,c("run","glosa_pueblo_originario")] |> 
        dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run", "clus_pam_om6")], by="run", multiple="first") |> 
        janitor::tabyl(glosa_pueblo_originario, clus_pam_om6))
# X-squared = 175.35, df = 40, p-value < 2.2e-16
#
cat("Restringiendo el análisis a quienes reportan MINSAL Rapa Nui, Mapuche y Ninguno") 

df_filled2[, c("run", "glosa_pueblo_originario")]|>
  dplyr::left_join(
    ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[, c("run", "clus_pam_om6")],
    by = "run", multiple = "first"
  )|>
  dplyr::filter(glosa_pueblo_originario %in% c("RAPA NUI (PASCUENSE)", "MAPUCHE", "NINGUNO"))|>
  janitor::tabyl(glosa_pueblo_originario, clus_pam_om6)|>
  (\(df) {
    list(
      chisq = janitor::chisq.test(df),
      percentages = df|>
        janitor::adorn_percentages("col")|>
        dplyr::mutate(across(2:7, ~round(., 2)))
    )
  })()

ppoo_clus_pre_pam_om6_q<-
  df_filled2[,c("run","glosa_pueblo_originario")] |> 
  dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run", "clus_pam_om6","factor_inclusivo_real_hist_mas_autperc")], by="run", multiple="first") |> 
  dplyr::mutate(glosa_pueblo_originario_rec= dplyr::case_when(glosa_pueblo_originario=="NINGUNO" & factor_inclusivo_real_hist_mas_autperc!="00"~ "DESCONOCIDO", T~glosa_pueblo_originario)) |> 
  janitor::tabyl(glosa_pueblo_originario_rec, clus_pam_om6) |> 
  janitor::adorn_percentages("row")

reshape2::melt(ppoo_clus_pre_pam_om6_q, id.vars = "glosa_pueblo_originario_rec") |> 
  dplyr::mutate(glosa_pueblo_originario_rec= 
    dplyr::recode(glosa_pueblo_originario_rec, 
      "OTRO (ESPECIFICAR)"= "OTRO(n=86)", #"OTRO(n=77)", 
      "RAPA NUI (PASCUENSE)"= "RAPA NUI(n=37)", #"RAPA NUI(n=34)", 
      "YAGÁN (YÁMANA)"= "YAGÁN(n=2)",#"YAGÁN(n=2)",
      "AYMARA"= "AYMARA(n=15)",#"AYMARA(n=13)",
      "COLLA"= "COLLA(n=6)",#"COLLA(n=6)",
      "DIAGUITA"= "DIAGUITA(n=3)",#"DIAGUITA(n=3)",
      "KAWÉSQAR"= "KAWÉSQAR(n=4)",#"KAWÉSQAR(n=4)",
      "MAPUCHE"= "MAPUCHE(n=299)",#"MAPUCHE(n=255)",
      "DESCONOCIDO"= ".DESCONOCIDO(n=2.353)",#".DESCONOCIDO(n=1.985)",
      "NINGUNO"=".NINGUNO(n=10.425)"#".NINGUNO(n=9.156)"
      )) |> 
ggplot(aes(x = glosa_pueblo_originario_rec, y = value, fill = variable)) + 
  geom_bar(stat = "identity", position = "fill") + 
  scale_fill_manual(values =  c(
    "6623, Un trimestre, TSM(5)" = "#D2B48C",
    "6612, Un trimestre, TUS(4)" = "#E27A5B",
    "6522, Un semestre TSM(2)" = "#20B2AA",
    "6574, Comorbilidad un trimestre(3)" = "#6B8E23",
    "6268, TSM, 1 año después, TSM(1)" = "#2F4F4F",
    "6624, TSM, 1 año después, otras causas(6)" = "#708090"
  )) +
  labs(title = NULL,
       x = "Grupo Étnico",
       y = "Proporción de reportes",
       fill = "Grupos") +  # Cambia el título de la leyenda a "Grupos"
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 12),           # Tamaño de las etiquetas de los grupos étnicos
    axis.text.x = element_text(size = 12),           # Tamaño de las etiquetas del eje X
    axis.title.x = element_text(size = 14),          # Tamaño del título del eje X
    axis.title.y = element_text(size = 14),          # Tamaño del título del eje Y
    plot.title = NULL,  # Tamaño y estilo del título del gráfico
    legend.title = element_text(size = 14, margin = margin(b = -.1)),          # Tamaño del título de la leyenda
    legend.spacing.y = unit(1.5, "lines"),
    legend.box.spacing = unit(0.5, "lines"),      # Controla el espacio entre la leyenda y el gráfico
    legend.margin = margin(5, 5, 5, 5),  
    legend.key.height = unit(1, "cm"),  
    legend.text = element_text(size = 12)            # Tamaño del texto de la leyenda
    ) + 
  coord_flip()  # Hacer el gráfico horizontal
ggsave("_figs/grafico_ancho_achatado_pam_om6_q_25.png", width = 10, height = 5, dpi=1000)


ppoo_clus_pre_pam_om6_q_rapanui<-
  df_filled2[,c("run","glosa_pueblo_originario")] |> 
  dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run", "clus_pam_om6","factor_inclusivo_real_hist_mas_autperc")], by="run", multiple="first") |> 
  dplyr::mutate(glosa_pueblo_originario_rec= dplyr::case_when(glosa_pueblo_originario=="NINGUNO" & factor_inclusivo_real_hist_mas_autperc!="00"~ "DESCONOCIDO", glosa_pueblo_originario=="NINGUNO"~"NINGUNO", glosa_pueblo_originario=="RAPA NUI (PASCUENSE)"~"RAPA NUI", T~"RESTO")) |> 
  janitor::tabyl(glosa_pueblo_originario_rec, clus_pam_om6) |> 
  janitor::adorn_percentages("row")

ppoo_clus_pre_pam_om6_q_rapanui |> 
  knitr::kable("markdown", caption= "Clasificación PPOO vs. conglomerados")


cat("origen de Rapa Nui?")
df_filled2[,c("run","glosa_pueblo_originario")]|> 
    dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run", "clus_pam_om6","factor_inclusivo_real_hist_mas_autperc", "codigo_region_rec_base")], by="run", multiple="first")|> 
    dplyr::mutate(glosa_pueblo_originario_rec= dplyr::case_when(glosa_pueblo_originario=="NINGUNO" & factor_inclusivo_real_hist_mas_autperc!="00"~ "DESCONOCIDO", glosa_pueblo_originario=="NINGUNO"~"NINGUNO", glosa_pueblo_originario=="RAPA NUI (PASCUENSE)"~"RN", T~"RESTO"))|> 
    dplyr::filter(glosa_pueblo_originario_rec=="RN")|> janitor::tabyl(clus_pam_om6,codigo_region_rec_base)|>
  knitr::kable("markdown", caption= "Origen Establecimiento, PPOO Rapa Nui, según conglomerado")
```



#### 1.2.1. Trayectorias

Vemos los gráficos de las trayectorias

```{r 12plot-cluster}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Trayectorias de hospitalización, orden de sujetos según el primer estado observado y su duración, representando a cada individuo como una línea en el gráfico (observaciones ordenadas de acuerdo a ASW)"
#| results: "hold"
#| fig-width: 12
#| fig-height: 8
#| fig-dpi: 600
#| label: 12plot-cluster-grafico-trayectorias


categories_pam_om6_q<-attr(States_Wide.seq_quarter_t_prim_adm_cens, "labels")
new_labels <- categories_pam_om6_q
new_labels[which(categories_pam_om6_q == "Otras causas")] <- "Otras\ncausas"
#new_labels[which(categories == "Consumo\nde sustancias")] <- "Consumo de\nsustancias"

# Creamos un vector con las columnas llenando con NA si faltan valores
sil_pam_om_clus6_q <- wcSilhouetteObs(as.dist(dist_quarter_om), 
        pamRange_quarter_om$clustering$cluster6, measure="ASW")


seq_plot_pam_om6_q <- ggseqiplot(States_Wide.seq_quarter_t_prim_adm_cens, 
                                 group= ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,
                                 facet_ncol=2, facet_nrow=4, sortv=sil_pam_om_clus6_q) +
  theme(legend.position = "none")+
  labs(x="Trimestres", y="# IDs de usuarios")+
  #guides(fill = guide_legend(nrow = 1))+
  theme(
    panel.spacing = unit(0.1, "lines"),  # Reduce el espaciado entre los paneles
    axis.text.y = element_text(size = 15),           # Tamaño de las etiquetas de los grupos étnicos
    axis.text.x = element_text(size = 15),           # Tamaño de las etiquetas del eje X
    axis.title.x = element_text(size = 15),          # Tamaño del título del eje X
    axis.title.y = element_text(size = 15, margin = margin(r = -10)),#,margin = margin(l = -10)),
    strip.text = element_text(size = 15, margin = margin(b =-15, t=10)),
    legend.text = element_text(size = 15),
    legend.spacing.x = unit(0.1, 'cm'),  # Alinea el título de la leyenda hacia la izquierda
    legend.box.margin = margin(t = 0, r = 0, b = 0, l = -50),
    legend.position = "bottom", 
    legend.justification = "left",
    panel.spacing.y = unit(0.2, "lines"),
    plot.margin = margin(10, 10, 10, 10), # Ajusta márgenes globales
    strip.placement = "outside",   # Para colocar las tiras fuera de los ejes
    strip.background = element_blank() # Elimina el fondo para que parezca más espacioso
    #legend.key.size = unit(1.5, "lines"),        # Aumenta el tamaño de los símbolos en la leyenda
  )+
  guides(fill = guide_legend(nrow = 1)) +
  scale_fill_manual(labels = new_labels, values=c("#E2725B", "#556B2F", "#D2B48C",#"#8B4513",
                                                  "#FFFFFF","#808080","#000000"))+
  scale_color_manual(labels = new_labels, values=c("#E2725B", "#556B2F", "#D2B48C",#"#8B4513",
                                                   "#FFFFFF","#808080","#000000"))
seq_plot_pam_om6_q 

ggsave(filename="_figs/clusters_pam_om6_q_mod_25.png", seq_plot_pam_om6_q,  width = 12*.95, height = 8*.95, dpi=1000)
```

```{r }
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Trayectorias de hospitalización, frecuencia relativa de estados en un gráfico de barras apiladas por trimestre."
#| results: "hold"
#| fig-width: 12
#| fig-height: 8
#| fig-dpi: 600
#| label: 11plot-cluster2-grafico-trayectorias2

seq_plot2_pam_om6_q <- ggseqdplot(States_Wide.seq_quarter_t_prim_adm_cens, 
                                 group= ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,
                                 facet_ncol=2, facet_nrow=4) +
  theme(legend.position = "none")+  # Colocar la leyenda abajo
  labs(x="Trimestres", y="Frecuencia relativa de estados")+
  theme(
    panel.spacing = unit(0.1, "lines"),
    axis.text.y = element_text(size = 15),           # Tamaño de las etiquetas de los grupos étnicos
    axis.text.x = element_text(size = 15),           # Tamaño de las etiquetas del eje X
    axis.title.x = element_text(size = 15),          # Tamaño del título del eje X
    axis.title.y = element_text(size = 15, margin = margin(r = -5)),
    strip.text = element_text(size = 15),
    panel.spacing.y = unit(0.5, "lines"),
    strip.placement = "outside",   # Para colocar las tiras fuera de los ejes
    strip.background = element_blank() # Elimina el fondo para que parezca más espacioso
    #legend.key.size = unit(1.5, "lines"),        # Aumenta el tamaño de los símbolos en la leyenda    
  )  # Colocar la leyenda abajo
seq_plot2_pam_om6_q
ggsave("_figs/clusterspam_om62_q_mod_25.png",seq_plot2_pam_om6_q, width = 12, height = 8, dpi=1000)


seq_plot2_pam_om6_q <- sprintf("%1.2f",pamRange_quarter_om$stats[5,])
seq_plot2_pam_om6_q <-as.data.frame(t(seq_plot2_pam_om6_q))
colnames(seq_plot2_pam_om6_q)<-attr(pamRange_quarter_om$stats, "name")

seq_plot2_pam_om6_q|>knitr::kable()
```

De este modo, presenta el cambio agregado en la distribución de estados a lo largo del tiempo, sin considerar las secuencias individuales.


```{r}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| paged.print: true
#| results: "hold"
#| label: exploracion-siluetas

invisible("Definimos las observaciones que tienen siluetas negativas")
sil_neg_pam_om_clus6_q <- which(sil_pam_om_clus6_q<0)

invisible("A qué conglomerados pertenecen?")
table(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[sil_neg_pam_om_clus6_q, "clus_pam_om6"])

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$rn<- 1:nrow(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens)
```


#### 1.2.2.Exploración transiciones

##### 1.2.2.a Transiciones- RM y no RM

Tasas de transición no RM a RM y viceversa

```{r 12pre-plot-cluster3}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| paged.print: true
#| results: "hide"

invisible("Tasas de transición no RM a RM y viceversa")

trim_tasa_pam_om6_q_cens_cnt<-  
  seqcount_t(States_Wide.seq_quarter_t_prim_adm_RM_cens, 
             group=ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6)|>
  dplyr::filter(count>0)|>
  dplyr::mutate(trans = paste0(from,"_", to))|>
  dplyr::mutate(across(c("from","to"),~  gsub("\\[->\\s*|\\s*->\\s*\\]|\\[|\\]", "", .))) 
trim_tasa_pam_om6_q_cens_rate<-  
  seqtrate_t(States_Wide.seq_quarter_t_prim_adm_RM_cens, 
             group=ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6)|>
  dplyr::filter(rate>0)|>
  dplyr::mutate(trans = paste0(from,"_", to))|>
  dplyr::mutate(across(c("from","to"),~  gsub("\\[->\\s*|\\s*->\\s*\\]|\\[|\\]", "", .)))
```

```{r 12plot-cluster3}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Porcentajes de transición  no-RM y RM por cada cluster"
#| results: "hold"
#| fig-width: 8
#| fig-height: 8
#| fig-dpi: 600

trim_tasa_pam_om6_q_cens_rate|>  
  dplyr::left_join(trim_tasa_pam_om6_q_cens_cnt, by=c("from"="from", "glosa_sexo"="glosa_sexo","to"="to"))|>
  dplyr::rename("recuento"="count")|>
  dplyr::filter(from %in% c("RM", "noRM"))|> 
  ggplot(aes(x = from, y = to, fill = rate, size=log(recuento+1))) +
  geom_tile() +
  coord_flip()+
  scale_fill_gradient(low = "white", high = "blue") + # Ajusta la escala de colores según tus preferencias
  labs(title = "Tasas de transición, Trimestre (s/censura)",
       x = "Desde",
       y = "Hacia",
       fill = "Rate") +
  theme_minimal() +
  facet_wrap(~glosa_sexo)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  geom_text(aes(label = sprintf("%1.2f", rate), size =log(recuento+1)*.5), color = "black")

invisible("Hay muy pocos casos que se entrecruzan entre noRM y RM (fuera de la diagnonal)")
```


##### 1.2.2.b Transiciones

```{r 12pre-plot-cluster4}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| paged.print: true
#| results: "hide"

trim_tasa2_pam_om6_q_cens_cnt<-  
   seqcount_t(States_Wide.seq_quarter_t_prim_adm_cens, 
             group=ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6)|>
  dplyr::filter(count>0)|>
  dplyr::mutate(trans = paste0(from,"_", to))|>
  dplyr::mutate(across(c("from","to"),~  gsub("\\[->\\s*|\\s*->\\s*\\]|\\[|\\]", "", .))) 
trim_tasa2_pam_om6_q_cens_rate<-  
  seqtrate_t(States_Wide.seq_quarter_t_prim_adm_cens, 
             group=ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6)|>
  dplyr::filter(rate>0)|>
  dplyr::mutate(trans = paste0(from,"_", to))|>
  dplyr::mutate(across(c("from","to"),~  gsub("\\[->\\s*|\\s*->\\s*\\]|\\[|\\]", "", .)))
```

```{r 12plot-cluster4}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Porcentajes de transición, transiciones posteriores, por cada cluster"
#| results: "hold"
#| fig-width: 8
#| fig-height: 8
#| fig-dpi: 600

trim_tasa2_pam_om6_q_cens_rate|>  
  dplyr::left_join(trim_tasa2_pam_om6_q_cens_cnt, by=c("from"="from", "glosa_sexo"="glosa_sexo","to"="to"))|>
  dplyr::rename("recuento"="count")|>
  #dplyr::filter(from %in% c("RM", "noRM"))|> 
  ggplot(aes(x = from, y = to, fill = rate, size=log(recuento+1))) +
  geom_tile() +
  coord_flip()+
  scale_fill_gradient(low = "white", high = "blue") + # Ajusta la escala de colores según tus preferencias
  labs(title = "Tasas de transición, Trimestre (s/censura)",
       x = "Desde",
       y = "Hacia",
       fill = "Rate") +
  theme_minimal() +
  facet_wrap(~glosa_sexo)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  geom_text(aes(label = sprintf("%1.2f", rate), size =log(recuento+1)*.5), color = "black")
```

##### 1.2.2.c Tiempo promedio por cluster

```{r 12plot-cluster5}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Tiempo promedio en cada estado por estatus PPOO (Trimestral c/censura)"
#| results: "hold"
#| fig-width: 8
#| fig-height: 8
#| fig-dpi: 600

seq_mean_t(States_Wide.seq_quarter_t_prim_adm_cens, 
             group=ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6)|>
  data.table::as.data.table(keep.rowname=T)|> 
  dplyr::mutate(rn= gsub("\\d", "", rn))|> 
  ggplot(aes(x=rn, fill= factor_inclusivo, y=Mean))+
  geom_bar(width = 1, stat = "identity") +
  theme_minimal() +
  facet_wrap(~factor_inclusivo)+
  labs(title = NULL,
       x = NULL,
       y = NULL) +
    scale_fill_manual(values =  c(
    "6623, Un trimestre, TSM(5)" = "#D2B48C",
    "6612, Un trimestre, TUS(4)" = "#E27A5B",
    "6522, Un semestre TSM(2)" = "#20B2AA",
    "6574, Comorbilidad un trimestre(3)" = "#6B8E23",
    "6268, TSM, 1 año después, TSM(1)" = "#2F4F4F",
    "6624, TSM, 1 año después, otras causas(6)" = "#708090"
  )) +
  coord_flip()+
  theme(#axis.text.x = element_blank(),
    #axis.text.y = element_blank(),
    panel.grid = element_blank()) +
#  scale_fill_brewer(palette = "Pastel1", labels=c("Sin\nautoidentificación\nni reconocimiento", "Autoidentificación\nsin reconocimiento", "Ambas")) +
  geom_text(aes(label = round(Mean,1)), 
            position = position_stack(vjust = 0.5), 
            size = 3.5, # Ajusta el tamaño de la fuente aquí
            color = "black", # Color del texto
            family = "sans", # Puedes cambiar la fuente si lo deseas
            background = element_rect(fill = "white", color = NA)) + # Fondo blanco
  theme(legend.title = element_blank())
        #, legend.position=c(.8,.15))

invisible("No me aporta mucho")
```



#### 1.2.3. Comparación variables

##### 1.2.3.a. Comparación covariables- PPOO

```{r 12f-comp-cov-ppoo1}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
  dplyr::count(clus_pam_om6, factor_inclusivo_real_hist_mas_autperc)|>
  dplyr::group_by(clus_pam_om6)|>
  dplyr::mutate(n_prop = paste0(n, " (",scales::percent(n / sum(n), accuracy=.1),")"))|>
  dplyr::select(-n)|>
  tidyr::pivot_wider(names_from = clus_pam_om6, values_from = n_prop, values_fill = "0")|>
  dplyr::mutate(factor_inclusivo_real_hist_mas_autperc = factor(factor_inclusivo_real_hist_mas_autperc, levels = c("11", "10", "00"), labels= c("Se identifica/hay reconocimeinto", "No se identifica/hay reconocimiento", "No se identifica/no pertenece")))|> 
  dplyr::arrange(factor_inclusivo_real_hist_mas_autperc)|>
  (\(df) {
  if (interactive()) {mutate(df, across(-factor_inclusivo_real_hist_mas_autperc, ~ gsub("%", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
  knitr::kable(df, caption="Porcentajes por fila, conglomerado vs. Pertenencia/identificación + Reconocimento CONADI PPOO")
  })()
```

Vemos las categorías de clasificación de PPOO según autopercepción (en MINSAL y en RSH) y reconocimiento CONADI.

```{r 12g-comp-cov-ppoo2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
#| 
chisq.test(table(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$factor_inclusivo_real_hist_mas_autperc,ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6))
#X-squared = 8.6689, df = 10, p-value = 0.5638

chisq_cramerv(
with(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, table(factor_inclusivo_real_hist_mas_autperc , clus_pam_om6))
)
# $chisq_statistic
# [1] "8.67"
# 
# $chisq_df
# df 
# 10 
# 
# $chisq_p_value
# [1] "0.5638"
# 
# $cramers_v
# [1] "0.03"
message("Descartando valores negativos en sil width")
chisq.test(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus4_q), table(factor_inclusivo_real_hist_mas_autperc, clus_pam_om6))
)
# X-squared = 12.066, df = 10, p-value = 0.2807

chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus4_q), table(factor_inclusivo_real_hist_mas_autperc, clus_pam_om6))
)
# $chisq_statistic
# [1] "12.07"
# 
# $chisq_df
# df 
# 10 
# 
# $chisq_p_value
# [1] "0.2807"
# 
# $cramers_v
# [1] "0.03"
```


Ahora lo hacemos con la versión binarizada

```{r 12i-comp-cov-ppoo4}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens |> 
    dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1)) |> 
    janitor::tabyl(factor_inclusivo_real_hist_mas_autperc_bin,clus_pam_om6) |>
    janitor::chisq.test()
#X-squared = 7.0086, df = 5, p-value = 0.22


chisq_cramerv(
with(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, table(factor_inclusivo_real_hist_mas_autperc_bin, clus_pam_om6))
)
# $chisq_statistic
# [1] "7.01"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "0.2200"
# 
# $cramers_v
# [1] "0.03"

message("Descartando valores negativos en sil width")
chisq.test(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus4_q), table(factor_inclusivo_real_hist_mas_autperc_bin , clus_pam_om6))
)
#X-squared = 9.6531, df = 5, p-value = 0.08568

chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus4_q), table(factor_inclusivo_real_hist_mas_autperc_bin, clus_pam_om6))
)
# $chisq_statistic
# [1] "9.65"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "0.0857"
# 
# $cramers_v
# [1] "0.04"
```



```{r 12i-comp-cov-ppoo5}

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
  dplyr::count(clus_pam_om6, factor_inclusivo_real_hist_mas_autperc_bin)|>
  dplyr::group_by(clus_pam_om6) |>
  dplyr::mutate(n_prop = paste0(n, " (",scales::percent(n / sum(n), accuracy=.1),")")) |>
  dplyr::select(-n) |>
  tidyr::pivot_wider(names_from = factor_inclusivo_real_hist_mas_autperc_bin, values_from = n_prop, values_fill = "0")|> 
  (\(df) {
        if (interactive()) {mutate(df, across(-1, ~ gsub("%", "", gsub("\\.", ",", .))))|> select(3)|>t()|>  rio::export("clipboard")}
        knitr::kable(df, "markdown", col.names=c("Conglomerados","No se identifica/no pertenece", "Hay reconocimeinto"), caption="Porcentajes por fila, conglomerado vs. Pertenencia/identificación + Reconocimento CONADI PPOO")
      })()
```


Tampoco se observa asociación alguna. Hicimos una prueba post-hoc usando Bonferroni


##### 1.2.3.b. Comparación covariables- Mortalidad

```{r 12l-comp-cov-mortalidad}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
# 
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens |> 
  dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1)) |> 
  janitor::tabyl(clus_pam_om6,death_time_rec) |> 
  dplyr::mutate(`1`= paste0(`1`," (", scales::percent(`1`/(`0`+`1`), accuracy=.1),")")) |> 
  dplyr::left_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens |> 
  dplyr::group_by(clus_pam_om6) |> 
  dplyr::summarise(mean=sprintf("%1.1f",mean(cens_time))), by="clus_pam_om6") |> 
  dplyr::select(-`0`)|> 
  (\(df) {
        if (interactive()) {mutate(df, across(-1, ~ gsub("%", "", gsub("\\.", ",", .))))|> select(2)|> t()|>  rio::export("clipboard")}
        knitr::kable(df, "markdown", col.names=c("Conglomerado","Mortalidad observada", "Promedio"), caption="Post-hoc, conglomerado vs. Mortalidad y tiempo a censura")
      })()
```

<div class="scrollable-content">
```{r 12m-comp-cov-mortalidad2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1))|>
             janitor::tabyl(death_time_rec,clus_pam_om6)|>
              janitor::chisq.test(correct=T)
#X-squared = 12.855, df = 5, p-value = 0.02478

ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1))|>
             janitor::tabyl(death_time_rec,clus_pam_om6)|>
              janitor::fisher.test(simulate.p.value=T, B=1e5)
#p-value = 0.0143

chisq_cramerv(
with(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1)), table(death_time_rec , clus_pam_om6))
)
# $chisq_statistic
# [1] "12.85"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "0.0248"
# 
# $cramers_v
# [1] "0.04"
cat("Descartando valores negativos en sil width")
chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)|>
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1)), table(death_time_rec , clus_pam_om6))
)
# $chisq_statistic
# [1] "12.85"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "0.0248"
# 
# $cramers_v
# [1] "0.04"
subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)|>
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1))|>
             janitor::tabyl(death_time_rec,clus_pam_om6)|>
              janitor::fisher.test(simulate.p.value=T, B=1e5)
#p-value = 0.00155

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
##_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

tab_cl_mortalidad_pam_om6_q<- 
  ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
  dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1))|> 
  janitor::tabyl(death_time_rec,clus_pam_om6)|> 
  as.matrix(ncol=2)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
##_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

chisq.posthoc.test(with(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|> 
             dplyr::mutate(death_time_rec=ifelse(death_time==20,0,1)), table(death_time_rec , clus_pam_om6), simulate.p.value=T, B=1e5))|> 
  mutate(across(3: dplyr::last_col(),~sprintf("%1.3f",as.numeric(.))))|> 
  t() |> 
  knitr::kable("markdown", digits=3)

# Realizar el análisis y crear la tabla directamente
pairwise.prop.test(t(tab_cl_mortalidad_pam_om6_q[,2:ncol(tab_cl_mortalidad_pam_om6_q)]), p.adjust.method = "holm")$p.value |>
  as.table() |>
  as.data.frame() |>
  rename(Grupo_1 = Var1, Grupo_2 = Var2, p_value = Freq) |>
  filter(!is.na(p_value)) |>
  mutate(p_value = ifelse(p_value <.001, "<.001", sprintf("%1.3f",p_value)) 
  ) |>
  knitr::kable(
    col.names = c("Grupo 1", "Grupo 2", "Valor p ajustado"),
    align = "l",
    caption= "Corrección parcial por comparaciones múltiples (Holm–Bonferroni)"
  )
```
</div>

No se constata una asociación entre la pertenencia a un conglomerado y mortalidad.


```{r 12l-comp-cov-mortalidad15}
# Cargar las librerías necesarias
library(survival)
library(ggplot2)

# Crear la variable de supervivencia
surv_obj_6c <- Surv(time = ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$death_time,
                 event = ifelse(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$death_time==20,0,1))

# Realizar el análisis de Log-Rank (survdiff)
surv_diff_6c <- survdiff(surv_obj_6c ~ clus_pam_om6,
                      data = ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens)

# Mostrar los resultados del test
print(surv_diff_6c)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
##_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

pairwise_survdiff(
        formula = Surv(time = death_time,
                 event = ifelse(death_time==20,0,1)) ~ clus_pam_om6,
    data = ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens,
    p.adjust.method = "holm"
)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
##_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

cat("Sin siluetas negativas")
surv_diff_6c_neg_sil <- survdiff(Surv(time = death_time,
                 event = ifelse(death_time==20,0,1)) ~ clus_pam_om6,
                      data = subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q))

# Mostrar los resultados del test
print(surv_diff_6c_neg_sil)

pairwise_survdiff(
    formula = Surv(time = death_time,
                 event = ifelse(death_time==20,0,1)) ~ clus_pam_om6,
    data = subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q), rho=0,
    p.adjust.method = "holm"
)
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
##_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

# Ajustar el modelo de Kaplan-Meier
km_fit_6c <- survfit(surv_obj_6c ~ clus_pam_om6,
                  data = ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens)

# Extraer los datos del modelo Kaplan-Meier para usar con ggplot
km_data_6c <- data.frame(
  time = km_fit_6c$time,
  surv = km_fit_6c$surv,
  upper = km_fit_6c$upper,
  lower = km_fit_6c$lower,
  strata = rep(c("6623, Un trimestre, TSM(5)", "6612, Un trimestre, TUS(4)", "6522, Un semestre TSM(2)", "6624, TSM, 1 año después, otras causas(6)", "6574, Comorbilidad un trimestre(3)", "6268, TSM, 1 año después, TSM(1)"), km_fit_6c$strata)
)

biostat3::survRate(Surv(time = death_time,
  event = ifelse(death_time==20,0,1)) ~ clus_pam_om6, 
  data= ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens)|> 
  mutate(
    tasa_formateada = sprintf(
      "%s [%s-%s] (%s / %s)",
      gsub("\\.", ",", sprintf("%.2f", rate * 10000)),
      gsub("\\.", ",", sprintf("%.2f", lower * 10000)),
      gsub("\\.", ",", sprintf("%.2f", upper * 10000)),
      event,
      scales::comma(tstop, big.mark = ".", decimal.mark = ",", accuracy = 1)
    )
  )|> 
  select(clus_pam_om6, tasa_formateada)|> 
   (\(df) { rownames(df) <- NULL ; df  })()|>
  (\(df) {
        if (interactive()) { t(df) |> rio::export("clipboard") }
        knitr::kable(df, "markdown", caption="Tasas de mortalidad por conglomerado")
      })()

mort_rate_tus_resto<-
biostat3::survRate(Surv(time = death_time,
  event = ifelse(death_time==20,0,1)) ~ clus_pam_om6_rec, 
  data= ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|> mutate(clus_pam_om6_rec= ifelse(grepl("TUS",clus_pam_om6),1,0)) )

cat("Diferencia multiplicativa entre cluster TSM 1 trimestre y el resto")
epitools::rateratio.midp(c(19, 80,  14650.96, 116453.67))

```


```{r 12l-comp-cov-mortalidad15-fig}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: false
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Kaplan-Meier"
#| results: "hold"
#| fig-dpi: 600

# Crear el gráfico de Kaplan-Meier con ggplot2
ggplot(km_data_6c, aes(x = time, y = surv, color = strata)) +
  geom_step(size = 1.2) +  # Curvas de supervivencia
  #geom_ribbon(aes(ymin = lower, ymax = upper, fill = strata), alpha = 0.2, color = NA) +  # Intervalos de confianza
  labs(
    title = "Curvas de Kaplan-Meier",
    x = "Tiempo (meses)",
    y = "Probabilidad de Supervivencia",
    color = "Grupo",
    fill = "Grupo"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom") 
```


##### 1.2.3.c. Comparación covariables- no RM vs. RM

```{r 12n-comp-cov-RMnoRM}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
chisq_cramerv(table(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$codigo_region_rec_base))
# $chisq_statistic
# [1] "44.94"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.08"

message("Descartando valores negativos en sil width")
chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q), table(codigo_region_rec_base , clus_pam_om6))
)
# $chisq_statistic
# [1] "45.19"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.08"

table(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$codigo_region_rec_base)|>
    data.frame()|>
    dplyr::group_by(Var1)|>
    dplyr::mutate(perc= scales::percent(Freq/sum(Freq), accuracy=.1))|>
    dplyr::ungroup()|> 
    dplyr::mutate(Freq= Freq)|>
    dplyr::mutate(fp= paste0(Freq, " (", perc,")" ))|>
    dplyr::select(-Freq, -perc)|> 
    tidyr::pivot_wider(names_from="Var2",values_from="fp")|> 
  (\(df) {
        if (interactive()) {mutate(df, across(-1, ~ gsub("%", "", gsub("\\.", ",", .))))|>  select(c(1,3)) |> t()|>  rio::export("clipboard")}
        knitr::kable(df, "markdown", caption="Frecuencias absolutas y relativas por fila", col.names= c("Conglomerados", "Fuera de RM", "En RM"))
      })()
```

<div class="scrollable-content">
```{r 12n-comp-cov-RMnoRM_b, class="scrollable-code"}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

pairwise_chisq_gof_test(table(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$codigo_region_rec_base), p.adjust.method="holm")|> 
  knitr::kable("markdown", caption="Dependencia categórica sol. 4 conglomerados, por pares de categorías en RM")
```
</div>

```{r 12n-comp-cov-RMnoRM_c, class="scrollable-code"}
chisq.posthoc.test(table(
    ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$clus_pam_om6,
    ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens$codigo_region_rec_base
  ))|> 
  (\(df) { dplyr::mutate_at(df, 3:ncol(df), ~ round(as.numeric(gsub("\\*", "", .)), 3))
  })()|>
  group_by(Dimension)|>
  (\(df) { summarise(df, across(2:(ncol(df)-1), ~ paste0(first(sprintf("%1.2f", .)), " (p=", last(sprintf("%1.3f", .)), ")")))
  })()|>
  (\(df) { dplyr::mutate_at(df, 2:length(names(df)), ~ gsub("p\\=0.000)", "p<0.001)", .))
  })()|>
  knitr::kable("markdown", caption = "Comparación post-hoc, conglomerado-RM vs. No-RM")
```



##### 1.2.3.e. Comparación covariables- Región

```{r 12n-comp-cov-reg1}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_cluster_region_pam_om6_q<-
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                    by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first")|> 
  janitor::tabyl(codigo_region, clus_pam_om6)|> 
  janitor::adorn_percentages("col")|> 
  janitor::adorn_rounding(digits = 2)

#colnames(tab_cluster_region_pam_om4_q)<- c("reg", "c1", "c4", "c3", "c5", "c6", "c7", "c8", "c9", "c2")
cod_reg_homo_pam_om6_q<-
data.frame(
  codigo_region = 1:16,
  nombre_region = c(
    "Región de Tarapacá",
    "Región de Antofagasta",
    "Región de Atacama",
    "Región de Coquimbo",
    "Región de Valparaíso",
    "Región del Libertador General Bernardo O'Higgins",
    "Región del Maule",
    "Región del Biobío",
    "Región de La Araucanía",
    "Región de Los Lagos",
    "Región de Aysén del General Carlos Ibáñez del Campo",
    "Región de Magallanes y de la Antártica Chilena",
    "Región Metropolitana de Santiago",
    "Región de Los Ríos",
    "Región de Arica y Parinacota",
    "Región de Ñuble"
  ),
  stringsAsFactors = FALSE
)

dplyr::mutate(tab_cluster_region_pam_om6_q, promedio_fila = rowMeans(across(2:length(colnames(tab_cluster_region_pam_om6_q))))) |> 
  dplyr::arrange(desc(promedio_fila)) |> 
  dplyr::left_join(cod_reg_homo_pam_om6_q, by="codigo_region") |> 
  dplyr::select(codigo_region, nombre_region, everything()) |> 
  dplyr::select(-promedio_fila)|> 
  dplyr::mutate_at(3:(length(colnames(tab_cluster_region_pam_om6_q))+1),~scales::percent(.))|> 
  knitr::kable(caption="Porcentaje por región")
```

```{r 12o-comp-cov-reg2a}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
tab_clus_reg_pam_om6_q<-
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
    dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                      by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first")|>
    janitor::tabyl(codigo_region, clus_pam_om6)

chisq_cramerv(tab_clus_reg_pam_om6_q[,-1])
# $chisq_statistic
# [1] "319.89"
# 
# $chisq_df
# df 
# 75 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.10"

janitor::fisher.test(tab_clus_reg_pam_om6_q, simulate.p.value=T, B=1e5)
#p-value = 1e-05

cat("Descartando valores negativos en sil width")
chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)|>
    dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first") , table(codigo_region , clus_pam_om6))
)
# $chisq_statistic
# [1] "305.07"
# 
# $chisq_df
# df 
# 75 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.10"
```

###### Por macrozona

```{r 12p-comp-cov-reg3}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_clus_macrozona_pam_om6_q<-
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                    by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first")|>
dplyr::mutate(macrozona = dplyr::case_when(
  codigo_region %in% c(15, 1, 2, 3) ~ "Macrozona Norte",
  codigo_region %in% c(4, 5)~ "Macrozona Centro",
  codigo_region %in% c(6, 7, 16, 8) ~ "Macrozona Centro Sur",
  codigo_region %in% c(9, 14, 10) ~ "Macrozona Sur",
  codigo_region %in% c(11, 12) ~ "Macrozona Austral",
  TRUE ~ "RM"  # En caso de que algún código no esté especificado
))|>
  janitor::tabyl(macrozona, clus_pam_om6) 

chisq_cramerv(dplyr::filter(tab_clus_macrozona_pam_om6_q,macrozona!="RM")[,-1])
# $chisq_statistic
# [1] "111.41"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.09"


cat("Descartando valores negativos en sil width")
chisq_cramerv(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)|>
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                    by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first")|>
dplyr::mutate(macrozona = dplyr::case_when(
  codigo_region %in% c(15, 1, 2, 3) ~ "Macrozona Norte",
  codigo_region %in% c(4, 5)~ "Macrozona Centro",
  codigo_region %in% c(6, 7, 16, 8) ~ "Macrozona Centro Sur",
  codigo_region %in% c(9, 14, 10) ~ "Macrozona Sur",
  codigo_region %in% c(11, 12) ~ "Macrozona Austral",
  TRUE ~ "RM"  # En caso de que algún código no esté especificado
))|> dplyr::filter(macrozona!="RM"), table(macrozona, clus_pam_om6))
)
# $chisq_statistic
# [1] "108.52"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.09"


fisher.test(
with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)|>
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                    by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first")|>
dplyr::mutate(macrozona = dplyr::case_when(
  codigo_region %in% c(15, 1, 2, 3) ~ "Macrozona Norte",
  codigo_region %in% c(4, 5)~ "Macrozona Centro",
  codigo_region %in% c(6, 7, 16, 8) ~ "Macrozona Centro Sur",
  codigo_region %in% c(9, 14, 10) ~ "Macrozona Sur",
  codigo_region %in% c(11, 12) ~ "Macrozona Austral",
  TRUE ~ "RM"  # En caso de que algún código no esté especificado
)) |> dplyr::filter(macrozona!="RM"), table(macrozona, clus_pam_om6)),simulate.p.value=T, B=1e5
)

tab_clus_macrozona_pam_om6_q|> 
  dplyr::filter(macrozona!="RM")|> 
  janitor::adorn_percentages("col")|> 
  janitor::adorn_rounding(digits = 3)|> 
    dplyr::mutate(across(-macrozona, ~ sprintf("%d (%.1f%%)", 
  dplyr::filter(tab_clus_macrozona_pam_om6_q,macrozona!="RM")[[cur_column()]], . * 100)))|>
  mutate(macrozona = factor(macrozona, levels = c("Macrozona Norte", "Macrozona Centro", "Macrozona Centro Sur", "Macrozona Sur", "Macrozona Austral")))|> 
  arrange(macrozona)|>
  (\(df) {
  if (interactive()) {mutate(df, across(-macrozona, ~ gsub("%", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
  knitr::kable(df, caption="Porcentajes por columna, conglomerado vs. macrozona")
  })()
```


<div class="scrollable-content">

```{r 12p-comp-cov-reg3b, class="scrollable-code"}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"


chisq.posthoc.test(dplyr::filter(tab_clus_macrozona_pam_om6_q, macrozona != "RM")[-1])|>
  (\(df) {dplyr::mutate_at(df, 3:ncol(df), ~ round(as.numeric(gsub("\\*", "", .)), 3))})()|>
  group_by(Dimension)|>
  (\(df) {summarise(df, across(2:(ncol(df) - 1), ~paste0(first(sprintf("%1.2f", .)), " (p=", last(sprintf("%1.3f", .)), ")")))})()|>
  (\(df) {dplyr::mutate_at(df, 2:length(names(df)), ~gsub("p\\=0.000)", "p<0.001)", .))})()|>
  dplyr::mutate(Dimension= dplyr::filter(tab_clus_macrozona_pam_om6_q, macrozona!="RM") |> pull(macrozona))|>
  mutate(Dimension = factor(Dimension, levels = c("Macrozona Norte", "Macrozona Centro", "Macrozona Centro Sur", "Macrozona Sur", "Macrozona Austral")))|> 
  arrange(Dimension)|>
  knitr::kable("markdown", caption = "Comparación post-hoc, conglomerado-Macrozona")
```
</div>

<div class="scrollable-content">

```{r 12p-comp-cov-reg3c, class="scrollable-code"}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
#| 
pairwise_chisq_gof_test(dplyr::filter(tab_clus_macrozona_pam_om6_q,macrozona!="RM")[-1], p.adjust.method="holm")|>
  knitr::kable("markdown", caption="Dependencia categórica sol. 6 conglomerados, por pares de categorías en Macrozona (corrección Holm-Bonferroni)")

#Groups sharing a letter are not significantlt different (alpha = 0.05)
```
</div>


##### 1.2.3.f. Comparación covariables- Sexo

```{r 12r-comp-cov-sex1}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_clus_sexo_pam_om6_q<-  
  ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens|>
    janitor::tabyl(glosa_sexo, clus_pam_om6)

chisq_cramerv(tab_clus_sexo_pam_om6_q[,-1])
# $chisq_statistic
# [1] "276.32"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.20"
#  
cat("Descartando valores negativos en sil width")
chisq_cramerv(with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q), table(glosa_sexo, clus_pam_om6))
)
# $chisq_statistic
# [1] "268.10"
# 
# $chisq_df
# df 
#  5 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.20"

tab_clus_sexo_pam_om6_q|>
  janitor::adorn_percentages("col")|>
  janitor::adorn_rounding(digits = 3)|>
  dplyr::mutate(across(-glosa_sexo, ~sprintf("%d (%.1f%%)", tab_clus_sexo_pam_om6_q[[cur_column()]],.*100)))|> 
  (\(df) {
        if (interactive()) {mutate(df, across(-1, ~ gsub("%", "", gsub("\\.", ",", .))))|>  slice(2) |> rio::export("clipboard")}
        knitr::kable(df, "markdown", caption="Porcentajes por columna, conglomerado vs. sexo")
      })()
```


```{r 12s-comp-cov-sex2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
chisq.posthoc.test(tab_clus_sexo_pam_om6_q[-1])|> 
  dplyr::mutate(Dimension = rep(c("HOMBRE", "MUJER"), each=2)) |> 
  dplyr::filter(Dimension == "MUJER") |>
  (\(df) dplyr::mutate(df, across(3:ncol(df), ~ dplyr::case_when(
    Value == "Residuals" ~ sprintf("%1.2f", as.numeric(.x)), 
    Value == "p values" ~ sprintf("%1.3f", as.numeric(gsub("\\*", "", .x)))
  ))))()|>
  (\(df) dplyr::mutate(df, across(3:ncol(df), ~ dplyr::case_when(
    Value == "p values" & .x == "0.000" ~ "<0.001", TRUE ~ .x
  ))))()|>
  t()|>
  (\(df) {
    colnames(df) <- df[1, ]
    df[-1, , drop = FALSE]
  })()|> 
  knitr::kable("markdown", caption="Post-hoc, conglomerado vs. sexo")
```

<div class="scrollable-content">
```{r 12s-comp-cov-sex3}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"
pairwise_chisq_gof_test(tab_clus_sexo_pam_om6_q[-1], p.adjust.method="holm")|> 
  dplyr::mutate(p= dplyr::case_when(p<0.001~ "<0.001",T~ sprintf("%1.3f",p)))|> 
  dplyr::mutate(p.adj= dplyr::case_when(p.adj<0.001~ "<0.001",T~ sprintf("%1.3f",p.adj)))|> 
  knitr::kable("markdown", caption="Dependencia categórica sol. 7 conglomerados, por pares de categorías en Sexo (corrección Holm-Bonferroni)") 
```
</div>



##### 1.2.3.g. Comparación covariables- Edad


```{r}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| label: 12t-desc-min-edad

dt_ing_calendar_quarter_t_desde_primera_adm_dedup |>
    dplyr::filter(quarter == 0) |>
    dplyr::inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run","clus_pam_om6")], by="run") |>
    dplyr::group_by(clus_pam_om6) |>
    dplyr::summarise(mean_edad = mean(min_edad_anos),
                     sd= sd(min_edad_anos),
                     p50= quantile(min_edad_anos,.5),
                     p25 = quantile(min_edad_anos, 0.25),
                     p75 = quantile(min_edad_anos, 0.75)) |>
    dplyr::mutate(sum= paste0(sprintf("%1.2f",mean_edad), " ± ", sprintf("%1.2f",sd), " ; ",p50," [",p25,", ",p75,"]"))|> 
    select(clus_pam_om6, sum)|>
   (\(df) {
     if (interactive()) {mutate(df, across(-clus_pam_om6, ~gsub("\\.", ",", .)))|> rio::export("clipboard")}
     knitr::kable(df, caption="Descriptivos, edad minima de ingreso por conglomerado", digits=2)
  })()
```


```{r 12t-edad-plot}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: true
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Edad promedio primer ingreso con intervalo de confianza por conglomerado"
#| results: "hold"
#| fig-width: 8
#| fig-height: 8
#| fig-dpi: 600


 dt_ing_calendar_quarter_t_desde_primera_adm_dedup|> 
  filter(quarter == 0)|> 
  inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[, c("run", "clus_pam_om6")],
             by = "run")|>
  dplyr::mutate(clus_pam_om6= str_wrap(clus_pam_om6, width = 20))|> 
  group_by(clus_pam_om6)|> 
  dplyr::summarise(mean_edad = mean(min_edad_anos),
            sd_edad   = sd(min_edad_anos),
            n         = n())|> 
  dplyr::mutate(sem         = sd_edad / sqrt(n),
         error_lower = mean_edad - sem,
         error_upper = mean_edad + sem)|> 
  ggplot(aes(x = clus_pam_om6, y = mean_edad)) +
  geom_point(color = "black", size = 3) +
  geom_errorbar(aes(ymin = error_lower, ymax = error_upper), width = 0.2, color = "black") +
  labs(x = "Conglomerado (k = 4)", y = "Edad al primer evento 2018 promedio") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.y = element_text(size = 17 * .7, face = "bold"),
        axis.text.x = element_text(size = 17 * .7, face = "bold", lineheight = 0.9),
        axis.title.x = element_text(size = 16 * .7, face = "bold"),
        axis.title.y = element_text(size = 16 * .7, face = "bold"),
        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

ggsave("_figs/edad_minima_por_cluster_pam_om6_q_25.png", width=8, height=5, dpi=600)
```

```{r 12u-anova-edad}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

invisible("Prueba de Levene par igualdad de varianzas")
with(dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
               dplyr::filter(quarter == 0) %>%
               dplyr::inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run","clus_pam_om6")], by="run"), car::leveneTest(min_edad_anos, clus_pam_om6))
#Sig.
anova_clus_pam_om6_q <- oneway.test(min_edad_anos ~ clus_pam_om6, 
             data = dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
               dplyr::filter(quarter == 0) %>%
               dplyr::inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run","clus_pam_om6")], by="run"),var.equal = T)


#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:
#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:

with(dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
               dplyr::filter(quarter == 0) %>%
               dplyr::inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run","clus_pam_om6")], by="run"), oneway_anova_effect_size (min_edad_anos, clus_pam_om6))
# eta ^2 [1] 0.02228232


# Ver los resultados del ANOVA
print(anova_clus_pam_om6_q)
#F = 30.174, num df = 5, denom df = 6620, p-value < 2.2e-16

cat("Descartando valores negativos en sil width")
with(dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
    dplyr::filter(quarter == 0) %>%
    dplyr::inner_join(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q)[,c("run","clus_pam_om6")], by="run"), 
     oneway.test(min_edad_anos ~ clus_pam_om6,var.equal = F)
     )
#F = 29.5, num df = 5.00, denom df = 383.94, p-value < 2.2e-16
```

<div class="scrollable-content">
```{r 12u-anova-edad2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

rstatix::games_howell_test(min_edad_anos ~ clus_pam_om6, 
  data =dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
               dplyr::filter(quarter == 0) %>%
               dplyr::inner_join(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens[,c("run","clus_pam_om6")], by="run"))|>
    dplyr::select(-1)|>
    dplyr::mutate(
    summary = sprintf(
      "%.2f [%.2f, %.2f], p= %s",
      as.numeric(estimate), 
      as.numeric(conf.low), 
      as.numeric(conf.high), 
      ifelse(p.adj < 0.001, "<0.001", sprintf("%.3f", p.adj))))|>
  dplyr::select(!any_of(c("estimate","conf.low", "conf.high", "p.adj", "p.adj.signif")))|>
  knitr::kable("markdown", col.names=c("Conglomerado1","Conglomerado2", "Estimación"), caption="Post-hoc, conglomerado vs. Promedio días de tratamiento")


cat("Descartando valores negativos en sil width")
sens_min_anios_clus_pam_om7_q<-
rstatix::games_howell_test(min_edad_anos ~ clus_pam_om7,data = dt_ing_calendar_quarter_t_desde_primera_adm_dedup %>%
    dplyr::filter(quarter == 0) %>%
    dplyr::inner_join(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus7_q)[,c("run","clus_pam_om7")], by="run")
     )

```
</div>


##### 1.2.3.h. Comparación covariables- Previsión

```{r 12v-prevision-a}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_clus_prev_pam_om6_q<-
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens %>%
    janitor::tabyl(prev_benef_rec_post, clus_pam_om6)

tab_clus_prev_pam_om6_q|>
   (\(df) {
     print(janitor::chisq.test(df))
     print(janitor::fisher.test(df, simulate.p.value = T, B = 1e5))
  })()
#X-squared = 42.542, df = 20, p-value = 0.002349
#p-value = 0.00173

tab_clus_prev_pam_om6_q|> 
  janitor::adorn_percentages("col") |> 
  janitor::adorn_rounding(digits = 3) |> 
  dplyr::mutate(across(-prev_benef_rec_post, ~sprintf("%d (%.1f%%)", tab_clus_prev_pam_om6_q[[cur_column()]],.*100))) |> 
  #dplyr::mutate_at(2:ncol(.),~scales::percent(.)) |> 
  mutate(prev_benef_rec_post = factor(prev_benef_rec_post, levels = c("ISAPRE", "FONASA D", "FONASA BC", "FONASA A", "FFAA")))|> 
  arrange(prev_benef_rec_post)|>
  (\(df) {
  if (interactive()) {mutate(df, across(-prev_benef_rec_post, ~ gsub("%", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
  knitr::kable(df, caption="Porcentajes por columna, conglomerado vs. Previsión")
  })()
```

<div class="scrollable-content">
```{r 12v-prevision-b}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

chisq_cramerv(tab_clus_prev_pam_om6_q[,-1])
# $chisq_statistic
# [1] "42.54"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "0.0023"
# 
# $cramers_v
# [1] "0.04"
# 
fisher.test(with(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, table(prev_benef_rec_post, clus_pam_om6)), simulate=T, B=1e5)
# p-value = 0.00169

cat("Descartando valores negativos en sil width")
chisq_cramerv(with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q), table(prev_benef_rec_post, clus_pam_om6)))
# $chisq_statistic
# [1] "35.74"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "0.0165"
# 
# $cramers_v
# [1] "0.04"

cat("Fisher test para valores ASW negativos")
fisher.test(with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q), table(prev_benef_rec_post, clus_pam_om6)), simulate=T, B=1e5)
#p-value = 0.01204


#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:
#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:
#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:

chisq.posthoc.test(tab_clus_prev_pam_om6_q[,-1])|>
  (\(df) dplyr::mutate(df, across(3:ncol(df), ~round(as.numeric(gsub("\\*","",.x)),3))))()|>
  # knitr::kable("html", caption="Comparación post-hoc, conglomerado-región") |>
  dplyr::group_by(Dimension)|>
  (\(df) dplyr::summarise(df, across(2:(ncol(df)-1), ~paste0(first(sprintf("%1.2f", .x)), " (p=", last(sprintf("%1.3f", .x)), ")"))))()|>
  (\(df) dplyr::mutate(df, across(2:length(names(df)), ~gsub("p=0.000)", "p<0.001)", .x))))()|> 
  dplyr::mutate(Dimension = dplyr::pull(tab_clus_prev_pam_om6_q[1]))|>
mutate(Dimension = factor(Dimension, levels = c("ISAPRE", "FONASA D", "FONASA BC", "FONASA A", "FFAA")))|> 
  arrange(Dimension)|>
  (\(df) {
  if (interactive()) {mutate(df, across(-Dimension, ~ gsub("\\(|\\)", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
  knitr::kable(df, caption="Comparación post-hoc, conglomerado-previsión")
  })()

pairwise_chisq_gof_test(tab_clus_prev_pam_om6_q[-1], p.adjust.method="holm")|> 
    knitr::kable("markdown", caption="Dependencia categórica sol. 4 conglomerados, por pares de categorías en Previsión (corrección Holm-Bonferroni)")
```
</div>

La asociación es lvemente significativa y muy débil. Si no se incluyen los valores con ASW negativos, la asociación no es significativa.

La revisión de los resultados post-hoc permite observar que 6035, Un trimestre, TSM(6) presenta un mayor porcentaje de pacientes en este conglomerado en una previsión de FFAA. Con todo, esta asociación no es consistente en las distintas pruebas.


##### 1.2.3.i. Comparación covariables- Niv. Complejidad

```{r 12w-nivcomp}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_clus_compl_pam_om6_q<-
ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens |> 
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
                    by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first") |> 
  janitor::tabyl(nivel_de_complejidad, clus_pam_om6) 

tab_clus_compl_pam_om6_q|> 
  janitor::adorn_percentages("col")|> 
  janitor::adorn_rounding(digits = 3)|> 
   dplyr::mutate(across(-nivel_de_complejidad, ~sprintf("%d (%.1f%%)", tab_clus_compl_pam_om6_q[[cur_column()]],.*100)))|> 
  mutate(nivel_de_complejidad = factor(nivel_de_complejidad, levels = c("Alta Complejidad", "Mediana Complejidad", "Baja Complejidad", "Pendiente", "Sin dato")))|> 
  arrange(nivel_de_complejidad)|>
  (\(df) {
  if (interactive()) {mutate(df, across(-nivel_de_complejidad, ~ gsub("%", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
  knitr::kable(df, caption="Tabla de contingencia, Niv. de complejidad (proporción por columna)")
  })()
```

A partir de la tabla de contingencia, se observa que 5939, Un semestre TSM(3)	y 5935, TSM, 6 meses después, TSM(2)
 presentan menores porcentajes de ingresos en establecimientos de Alta complejidad (~50%) y mayores en mediana complejidad (~27%). En contraste, pacientes clasificados en 5989, Comorbilidad un trimestre(4), 6025, Un trimestre, TUS(5) y 6036, TSM, 1 año después, otras causas(7)	se encuentran en mayor proporción en establecimientos de Alta complejidad.

```{r 12x-nivcomp-posthoc}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

tab_clus_compl_pam_om6_q |> 
  janitor::fisher.test(simulate.p.value=T, B=1e5)
#p-value = 1e-05


chisq_cramerv(tab_clus_compl_pam_om6_q[,-1])
# $chisq_statistic
# [1] "117.74"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.07"

message("Descartando valores negativos en sil width")
chisq_cramerv(with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus6_q) |> 
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], 
  by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first"), table(nivel_de_complejidad, clus_pam_om6)))
# $chisq_statistic
# [1] "118.72"
# 
# $chisq_df
# df 
# 20 
# 
# $chisq_p_value
# [1] "<0.001"
# 
# $cramers_v
# [1] "0.07"

fisher.test(with(subset(ing_dt_ing_calendar_quarter_t_desde_primera_adm_dedup_wide2_cens, !rn %in% sil_neg_pam_om_clus4_q) |> 
  dplyr::inner_join(data_long_establecimiento_2024_std[,c("ESTAB_HOMO", "codigo_region", "nivel_de_atencion", "nivel_de_complejidad")], by = c("estab_homo_base" = "ESTAB_HOMO"), multiple = "first"), table(nivel_de_complejidad, clus_pam_om4)), simulate.p.value = T, B=1e5)
#p-value = 1e-05

cat("Para post-hoc convendría consultar https://adaptivedesignstrial.shinyapps.io/posthoc/")

chisq.posthoc.test(tab_clus_compl_pam_om6_q[-1])|> 
  (\(df) dplyr::mutate(df, across(3:ncol(df), ~round(as.numeric(gsub("\\*","",.x)),3))))()|>
  # knitr::kable("html", caption="Comparación post-hoc, conglomerado-región") |>
  (\(df) dplyr::group_by(df, Dimension))()|>
  (\(df) dplyr::summarise(df, across(2:(ncol(df) - 1), ~paste0(first(sprintf("%1.2f", .x)), " (p=", last(sprintf("%1.3f", .x)), ")"))))()|>
  (\(df) dplyr::mutate(df, across(2:length(names(df)), ~gsub("p=0.000)", "p<0.001)",.x))))()|>
  ungroup()|> 
  dplyr::mutate(Dimension = dplyr::pull(tab_clus_compl_pam_om6_q[1]))|>
  mutate(Dimension = factor(Dimension, levels = c("Alta Complejidad", "Mediana Complejidad", "Baja Complejidad", "Pendiente", "Sin dato")))|> 
  arrange(Dimension)|>
  (\(df) {
    if (interactive()) {mutate(df, across(-Dimension, ~ gsub("\\(|\\)", "", gsub("\\.", ",", .))))|> rio::export("clipboard")}
    knitr::kable(df, "markdown", caption="Comparación post-hoc, conglomerado-Niv. complejidad")
  })() 
  
pairwise_chisq_gof_test(tab_clus_compl_pam_om6_q[-1], p.adjust.method="holm")|> 
    knitr::kable("markdown", caption="Dependencia categórica sol. 4 conglomerados, por pares de categorías en Niv. Complejidad (corrección Holm-Bonferroni)")
```


<div class="scrollable-content">
```{r 12x-nivcomp-posthoc2}
#| message: true
#| include: true
#| warning: false
#| error: true
#| eval: true
#| paged.print: true
#| results: "hold"

pairwise_chisq_gof_test(tab_clus_compl_pam_om7_q[-1], p.adjust.method="holm")|> 
    knitr::kable("markdown", caption="Dependencia categórica sol. 7 conglomerados, por pares de categorías en Niv. Complejidad (corrección Holm-Bonferroni)")
```
</div>


```{r}
#| message: true
#| include: true
#| warning: false
#| error: false
#| eval: false
#| fig.show: "hold"
#| fig.align: "center"
#| paged.print: true
#| fig.cap: "Comparación covariables con agrupamiento"
#| results: "hold"
#| fig-width: 8
#| fig-height: 10
#| fig-dpi: 600
#| 

#dput(attr(t(tab_clus_compl_pam_om7_q),"dimnames")[[1]])

# Definir los datos correctamente
data_pam_om7_q <-cbind.data.frame(
  Grupo= c("6035, Un trimestre, TSM(6)", "6025, Un trimestre, TUS(5)", 
"5939, Un semestre TSM(3)", "5989, Comorbilidad un trimestre(4)", 
"6036, TSM, 1 año después, otras causas(7)", "5710, TSM, 1 año después, TSM(1)", 
"5935, TSM, 6 meses después, TSM(2)"), 
      PPOO_bin            = c(NA, NA, NA, NA, NA, NA, NA), 
      PPOO_sinautoid          = c(NA, NA, NA, NA, NA, NA, NA), 
      PPOO_conautoid          = c(NA, NA, NA, NA, NA, NA, NA), 
      Mortalidad              = c(NA, NA, NA, NA, NA, NA, NA), 
      RM                      = c(NA, "-", NA, "+", NA, NA, NA), 
      `Macrozona-Austral`       = c(NA, NA, NA, NA, NA, NA, NA), 
      `Macrozona-Centro`        = c(NA, NA, NA, NA, NA, NA, NA), 
      `Macrozona-Centro Sur`    = c(NA, NA, NA, NA, NA, NA, NA), 
      `Macrozona-Norte`        = c("+","-", NA, NA, NA, NA, NA), 
      `Macrozona-Sur`         = c("-", "+", NA, NA, NA, NA, NA), 
      Sexo_mujeres             = c("+", "-", NA, "-", NA, NA, "+"), 
      `Edad ingreso`         = c(NA, "+", "-", "+", NA, NA, "-"), 
      `Previsión-FFAA`         = c(NA, NA, NA, NA, NA, NA, NA), 
      `Previsión-FONASA A`     = c(NA, NA, NA, NA, NA, NA, NA), 
      `Previsión-FONASA BC`     = c(NA, NA, NA, NA, NA, NA, NA), 
      `Previsión-FONASA D`     = c(NA, NA, NA, NA, NA, NA, NA), 
      `Previsión-ISAPRE`     = c(NA, NA, NA, NA, NA, NA, NA), 
      `NivComp-Baja`     = c(NA, NA, NA, NA, NA, NA, NA), 
      `NivComp-Media`     = c(NA, "-", "+", NA, NA, NA, NA), 
      `NivComp-Alta`     = c(NA, "+", "-", NA, NA, NA, NA))
#
# Asegurar que los nombres de las columnas sean válidos y no haya espacios en blanco
# Derretir el dataframe para que sea adecuado para ggplot2
data_melt_pam_om7_q <- reshape2::melt(data_pam_om7_q, id.vars = 'Grupo', variable.name = 'Variable', value.name = 'Asociación')

# Reemplazar los NA por un valor vacío
data_melt_pam_om7_q$Asociación[is.na(data_melt_pam_om7_q$Asociación)] <- "\n"

# Crear el gráfico con ggplot
data_melt_pam_om7_q|>
  dplyr::mutate(Variable = gsub("_", " ", Variable))|>
ggplot(aes(x = Variable, y = Grupo, fill = Asociación)) +
  geom_tile(color = "white", size = 0.8) +
  scale_fill_manual(values = c("+" = "#556B2F", "-" = "#E2725B", "\n" = "white")) +
  labs(title =NULL, x = "Variables", y = "Conglomerado") +
  theme_minimal() +
  theme(#axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid = element_blank())+
  theme(
    axis.text.y = element_text(size = 17, face = "bold"),#,margin = margin(l = 7)),           # Tamaño de las etiquetas de los grupos étnicos
    axis.text.x = element_text(size = 17, face = "bold", angle = 45, hjust = 1),           # Tamaño de las etiquetas del eje X
    axis.title.x = element_text(size = 16, face = "bold"),#,margin = margin(t = -15)),          # Tamaño del título del eje X
    axis.title.y = element_text(size = 16, face = "bold"),          # Tamaño del título del eje Y
    plot.title = NULL,  # Tamaño y estilo del título del gráfico
    legend.title = element_text(size = 17, face = "bold"),          # Tamaño del título de la leyenda
    legend.spacing.y = unit(1.5, "lines"),
    legend.box.spacing = unit(0.5, "lines"),      # Controla el espacio entre la leyenda y el gráfico
    legend.margin = margin(5, 5, 5, 5),  
    legend.key.height = unit(1, "cm"),  
    legend.text = element_text(size = 15, face = "bold")            # Tamaño del texto de la leyenda
  ) +
  coord_flip()
ggsave("_figs/asociaciones_pam_om7_q.png", width=8.8*.8, height=5*.8, dpi=1000)

```

<br> 


# Información de la sesión

```{r session-info, echo=T, error=T, message=TRUE, paged.print=TRUE,eval=T}
cat(paste0("R library: ", Sys.getenv("R_LIBS_USER")))
cat(paste0("Date: ",withr::with_locale(new = c('LC_TIME' = 'C'), code =Sys.time())))
cat(paste0("Editor context: ", getwd()))
cat("quarto version: "); system("quarto --version") 

save.image("avance250117_3_25.RData")
```


```{r session-info-r, echo=T, error=T, message=TRUE, paged.print=TRUE,eval=T}
#| class-output: center-table

sesion_info <- devtools::session_info()
dplyr::select(
  tibble::as_tibble(sesion_info$packages),
  c(package, loadedversion, source)
)|>
 knitr::kable(caption = "R packages", format = "html",
      col.names = c("Row number", "Package", "Version"),
    row.names = FALSE,
      align = c("c", "l", "r"))|>
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover"),font_size = 12)|>
  kableExtra::scroll_box(width = "100%", height = "375px")  
```


```{r session-info-python, echo=T, error=T, message=TRUE, paged.print=TRUE,eval=T}
#| class-output: center-table

reticulate::py_list_packages()|>
 knitr::kable(caption = "Python packages", format = "html",
      col.names = c("Package", "Version", "Requirement"),
    row.names = FALSE,
      align = c("c", "l", "r", "r"))|>
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover"),font_size = 12)|>
  kableExtra::scroll_box(width = "100%", height = "375px")  
```
